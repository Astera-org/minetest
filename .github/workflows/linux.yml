name: linux

# build on c/cpp changes or workflow changes
on:
  push:
    branches:
      - master
    paths:
      - 'lib/**.[ch]'
      - 'lib/**.cpp'
      - 'src/**.[ch]'
      - 'src/**.cpp'
      - '**/CMakeLists.txt'
      - 'cmake/Modules/**'
      - 'util/ci/**'
      - 'misc/irrlichtmt_tag.txt'
      - 'Dockerfile'
      - '.dockerignore'
      - '.github/workflows/linux.yml'
      - 'pixi.toml'
  pull_request:
    paths:
      - 'lib/**.[ch]'
      - 'lib/**.cpp'
      - 'src/**.[ch]'
      - 'src/**.cpp'
      - '**/CMakeLists.txt'
      - 'cmake/Modules/**'
      - 'util/ci/**'
      - 'misc/irrlichtmt_tag.txt'
      - 'Dockerfile'
      - '.dockerignore'
      - '.github/workflows/linux.yml'
      - 'pixi.toml'

env:
  MINETEST_POSTGRESQL_CONNECT_STRING: 'host=localhost user=minetest password=minetest dbname=minetest'

jobs:
  # Current gcc version
  gcc_12:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Install deps
        run: |
          source ./util/ci/common.sh
          install_linux_deps g++-12 libluajit-5.1-dev

      - uses: prefix-dev/setup-pixi@v0.8.1
        with:
          manifest-path: pixi.toml
          cache: true
          cache-write: ${{ github.event_name == 'push' && github.ref_name == 'master' }}

      - name: Build
        # Needed so conda environment is active
        shell: bash -l {0}
        run: |
          pixi run ./util/ci/build.sh
        env:
          CC: gcc-12
          CXX: g++-12

      - name: Test
        run: |
          pixi run ./bin/minetest --run-unittests

  # Current clang version
  clang_14:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Install deps
        run: |
          source ./util/ci/common.sh
          install_linux_deps clang-14 gdb

      - uses: prefix-dev/setup-pixi@v0.8.1
        with:
          manifest-path: pixi.toml
          cache: true
          cache-write: ${{ github.event_name == 'push' && github.ref_name == 'master' }}

      - name: Build
        # Needed so conda environment is active
        shell: bash -l {0}
        run: |
          pixi run ./util/ci/build.sh
        env:
          CC: clang-14
          CXX: clang++-14

      - name: Test
        run: |
          pixi run ./bin/minetest --run-unittests

      - name: Integration test + devtest
        run: |
          pixi run ./util/test_multiplayer.sh

      - name: Valgrind
        run: |
          pixi run -e valgrind valgrind --leak-check=full --leak-check-heuristics=all --undef-value-errors=no --error-exitcode=9 ./bin/minetest --run-unittests
